package com.example.florasg.GUI.searchGUI;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.res.AssetManager;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TableLayout;
import android.widget.TextView;

import com.example.florasg.R;
import com.example.florasg.Controller.PlantDataRetriever;
import com.example.florasg.GUI.PlantInfo;




public class SearchResultActivity extends Activity {

	private  static int IMGH = 120;
	private  static int IMGW = 80;

	private TableLayout newseacrhResultsTableScrollView;
	PlantDataRetriever pdr ;
	List<String[]> searchResults;
	ArrayList<Integer> descIdList;

	final Handler cwjHandler = new Handler();

	final Runnable mUpdateResults = new Runnable() {
		public void run() {
			updateUI();
		}
	};


	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		overridePendingTransition(R.anim.fadein, R.anim.fadeout);
		setContentView(R.layout.activity_search_result);

		pdr = new PlantDataRetriever(this);
		Intent intent = getIntent();		
		descIdList = intent.getIntegerArrayListExtra(SearchActivity.DESC_LIST);
		for(int i=0;i<descIdList.size();i++){
			Log.i("debug", " id is " + descIdList.get(i));
		}

		

		//LoadingOperation();
		//protected void LoadingOperation() {

		Thread t = new Thread() {
			public void run() {
				ProgressDialog dialog;
				dialog = new ProgressDialog(Activity.this);
				dialog.setTitle("Please wait");
				dialog.show();

				searchResults = new ArrayList<String[]>();
				pdr.openDB();		
				searchResults = pdr.searchPlantbyCharacteristics(descIdList);


				cwjHandler.post(mUpdateResults); //高速UI线程可以更新结果了
			}
		};
		t.start();
		//}

	}



	private void updateUI() {
		LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		newseacrhResultsTableScrollView = (TableLayout) findViewById(R.id.seacrhResultsTableScrollView);
		View newSearchResultRow = null;

		int noSpecies = searchResults.size();
		Log.i("debug","search result size is "+noSpecies);

		//for each species, add into the table as one table row
		for(int i=0;i<noSpecies;i++){
			String[] plant = searchResults.get(i);
			newSearchResultRow = inflater.inflate(R.layout.search_result_row, null);

			TextView newSciName = (TextView) newSearchResultRow.findViewById(R.id.sciNameTextView);
			TextView newComName = (TextView) newSearchResultRow.findViewById(R.id.comNameTextView);
			String speciesCode = plant[0];
			String sciName = plant[1];
			String comName = plant[2];

			newSciName.setText(sciName);
			newSciName.setId(i);
			final int _id = newSciName.getId();
			newComName.setText(comName);
			TextView newMatchNum = (TextView) newSearchResultRow.findViewById(R.id.matchNumber);
			String match = " Matches: "+plant[3];
			newMatchNum.setText(match);

			LinearLayout newspeciesImageScrollView = (LinearLayout) newSearchResultRow.findViewById(R.id.speciesImageScrollView);
			ImageView iv;
			LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(160,200);
			lp.setMargins(10,10,10,10);


			/*
						testing by hard-code image source
						if(i%2==0){
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.acraur1);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.acraur2);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.acraur3);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.acraur4);	
							newspeciesImageScrollView.addView(iv,lp);
						}
						else if(i%2==1){
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.alpaqu1);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.alpaqu2);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.alpaqu3);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.alpaqu4);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.alpaqu5);	
							newspeciesImageScrollView.addView(iv,lp);
							iv = new ImageView(getBaseContext());
							iv.setImageResource(R.drawable.alpaqu6);	
							newspeciesImageScrollView.addView(iv,lp);
						}
			 */

			//read the images from the folder named after species_code
			AssetManager am = getAssets();
			String[] files;
			try {
				files = am.list(speciesCode);

				int noImages = files.length;
				for(int j=0;j<noImages;j++){
					Log.i("species image","species image name: "+speciesCode+"/"+files[j]);
					Bitmap bmp=BitmapFactory.decodeStream(am.open(speciesCode+"/"+files[j]));
					bmp = Bitmap.createScaledBitmap(bmp, IMGW, IMGH, true);
					iv = new ImageView(getBaseContext());
					iv.setImageBitmap(bmp);	
					newspeciesImageScrollView.addView(iv,lp);
				} 
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}  

			newseacrhResultsTableScrollView.addView(newSearchResultRow);

			TextView speciesName = ((TextView) findViewById(_id));
			speciesName.setOnClickListener(speciesRowListener);
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.search_result, menu);
		return true;
	}

	public OnClickListener speciesRowListener = new OnClickListener(){

		@Override
		public void onClick(View v) {

			Intent intent = new Intent(getBaseContext(), PlantInfo.class);
			CharSequence sciName = ((TextView) v).getText();
			String sciNameStr = sciName.toString();
			Log.i("debug", "sci name is "+sciNameStr);
			intent.putExtra(PlantInfo.SCI_NAME, sciNameStr);
			startActivity(intent);			
		}

	};

	/*
	public class AsyncClass extends AsyncTask<Void, String, Void>{

		private Context context;
		ProgressDialog dialog;

		public AsyncClass(Context cxt) {
			context = cxt;
			dialog = new ProgressDialog(context);
		}

		@Override
		protected void onPreExecute() {
			dialog.setTitle("Please wait");
			dialog.show();
		}

		@Override
		protected Void doInBackground(Void... unused) {
			SystemClock.sleep(2000);

			searchResults = new ArrayList<String[]>();
			pdr.openDB();		
			searchResults = pdr.searchPlantbyCharacteristics(descIdList);	


			return (null);
		}

		@Override
		protected void onPostExecute(Void unused) {
			dialog.dismiss();
		}

	}
	 */

}
